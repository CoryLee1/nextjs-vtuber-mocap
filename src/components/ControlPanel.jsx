import React, { useState } from 'react';
import { DraggablePanel } from './DraggablePanel';

export const ControlPanel = ({ 
    isOpen, 
    onClose, 
    onOpenArmTest, 
    onOpenHandDebug, 
    onOpenSmoothSettings,
    mocapStatus,
    onOpenSensitivityPanel,
    onOpenModelManager,
    onOpenAnimationLibrary,
    selectedAnimation,
    showBones,
    onToggleBones,
    showArmAxes,
    onToggleArmAxes,
    axisSettings,
    onAxisAdjustment,
    cameraSettings,
    onCameraSettingsChange,
    debugSettings,
    onDebugSettingsChange
}) => {
    const [activeTab, setActiveTab] = useState('mocap');

    return (
        <DraggablePanel
            title="üéõÔ∏è ÊéßÂà∂Èù¢Êùø"
            defaultPosition={{ x: 150, y: 150 }}
            minWidth={400}
            minHeight={500}
            maxWidth={600}
            maxHeight={700}
            isVisible={isOpen}
            onClose={onClose}
            showToggle={false}
            showClose={true}
            zIndex={80}
        >
            <div className="p-4 h-full flex flex-col">
                {/* Ê†áÁ≠æÈ°µÂØºËà™ */}
                <div className="flex border-b border-gray-200 mb-4">
                    {[
                        { id: 'mocap', label: 'Âä®ÊçïÁä∂ÊÄÅ', icon: 'üìπ' },
                        { id: 'camera', label: 'Áõ∏Êú∫ËÆæÁΩÆ', icon: 'üì∑' },
                        { id: 'debug', label: 'Ë∞ÉËØïÈÄâÈ°π', icon: 'üêõ' },
                        { id: 'quick', label: 'Âø´ÈÄüÊìç‰Ωú', icon: '‚ö°' }
                    ].map(tab => (
                        <button
                            key={tab.id}
                            onClick={() => setActiveTab(tab.id)}
                            className={`flex-1 px-3 py-2 text-xs font-medium transition-colors ${
                                activeTab === tab.id
                                    ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'
                                    : 'text-gray-500 hover:text-gray-700'
                            }`}
                        >
                            <span className="mr-1">{tab.icon}</span>
                            {tab.label}
                        </button>
                    ))}
                </div>

                {/* ÂÜÖÂÆπÂå∫Âüü */}
                <div className="flex-1 overflow-y-auto">
                    {/* Âä®ÊçïÁä∂ÊÄÅÊ†áÁ≠æÈ°µ */}
                    {activeTab === 'mocap' && (
                        <div className="space-y-4">
                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Âä®ÊçïÁä∂ÊÄÅ</h4>
                                <div className="grid grid-cols-2 gap-2 text-xs">
                                    <div className={`flex items-center space-x-1 ${mocapStatus?.face ? 'text-green-600' : 'text-gray-400'}`}>
                                        <div className={`w-2 h-2 rounded-full ${mocapStatus?.face ? 'bg-green-500' : 'bg-gray-300'}`}></div>
                                        <span>Èù¢ÈÉ®</span>
                                    </div>
                                    <div className={`flex items-center space-x-1 ${mocapStatus?.pose ? 'text-green-600' : 'text-gray-400'}`}>
                                        <div className={`w-2 h-2 rounded-full ${mocapStatus?.pose ? 'bg-green-500' : 'bg-gray-300'}`}></div>
                                        <span>ÂßøÊÄÅ</span>
                                    </div>
                                    <div className={`flex items-center space-x-1 ${mocapStatus?.leftHand ? 'text-green-600' : 'text-gray-400'}`}>
                                        <div className={`w-2 h-2 rounded-full ${mocapStatus?.leftHand ? 'bg-green-500' : 'bg-gray-300'}`}></div>
                                        <span>Â∑¶Êâã</span>
                                    </div>
                                    <div className={`flex items-center space-x-1 ${mocapStatus?.rightHand ? 'text-green-600' : 'text-gray-400'}`}>
                                        <div className={`w-2 h-2 rounded-full ${mocapStatus?.rightHand ? 'bg-green-500' : 'bg-gray-300'}`}></div>
                                        <span>Âè≥Êâã</span>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">ÂΩìÂâçÂä®Áîª</h4>
                                <div className="text-xs text-gray-600">
                                    {selectedAnimation ? (
                                        <div className="bg-blue-50 p-2 rounded">
                                            <div className="font-medium">{selectedAnimation.name}</div>
                                            <div className="text-gray-500">{selectedAnimation.description}</div>
                                        </div>
                                    ) : (
                                        <div className="text-gray-400">Êú™ÈÄâÊã©Âä®Áîª</div>
                                    )}
                                </div>
                            </div>

                            <div className="space-y-2">
                                <h4 className="text-sm font-semibold text-gray-700">Âø´ÈÄüÊìç‰Ωú</h4>
                                <div className="grid grid-cols-2 gap-2">
                                    <button
                                        onClick={onOpenModelManager}
                                        className="px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
                                    >
                                        ÁÆ°ÁêÜÊ®°Âûã
                                    </button>
                                    <button
                                        onClick={onOpenAnimationLibrary}
                                        className="px-3 py-2 text-xs bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors"
                                    >
                                        Âä®ÁîªÂ∫ì
                                    </button>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* Áõ∏Êú∫ËÆæÁΩÆÊ†áÁ≠æÈ°µ */}
                    {activeTab === 'camera' && (
                        <div className="space-y-4">
                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Áõ∏Êú∫ÊéßÂà∂</h4>
                                <div className="space-y-2 text-xs">
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.enableUserControl}
                                            onChange={(e) => onCameraSettingsChange('enableUserControl', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>ÂêØÁî®Áî®Êà∑ÊéßÂà∂</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.enableAutoTrack}
                                            onChange={(e) => onCameraSettingsChange('enableAutoTrack', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>Ëá™Âä®Ë∑üË∏™</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.showHint}
                                            onChange={(e) => onCameraSettingsChange('showHint', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>ÊòæÁ§∫ÊèêÁ§∫</span>
                                    </label>
                                </div>
                            </div>

                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Èº†Ê†áÊéßÂà∂</h4>
                                <div className="space-y-2 text-xs">
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.useLeftMouseButton}
                                            onChange={(e) => onCameraSettingsChange('useLeftMouseButton', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>Â∑¶ÈîÆÊóãËΩ¨</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.useRightMouseButton}
                                            onChange={(e) => onCameraSettingsChange('useRightMouseButton', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>Âè≥ÈîÆÂπ≥Áßª</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={cameraSettings?.useMiddleMouseButton}
                                            onChange={(e) => onCameraSettingsChange('useMiddleMouseButton', e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>‰∏≠ÈîÆÁº©Êîæ</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* Ë∞ÉËØïÈÄâÈ°πÊ†áÁ≠æÈ°µ */}
                    {activeTab === 'debug' && (
                        <div className="space-y-4">
                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">ÊòæÁ§∫ÈÄâÈ°π</h4>
                                <div className="space-y-2 text-xs">
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={showBones}
                                            onChange={(e) => onToggleBones(e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>ÊòæÁ§∫È™®È™º</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={showArmAxes}
                                            onChange={(e) => onToggleArmAxes(e.target.checked)}
                                            className="rounded"
                                        />
                                        <span>ÊòæÁ§∫ÊâãËáÇÂùêÊ†áËΩ¥</span>
                                    </label>
                                    <label className="flex items-center space-x-2">
                                        <input
                                            type="checkbox"
                                            checked={debugSettings?.showDebug}
                                            onChange={(e) => onDebugSettingsChange({ ...debugSettings, showDebug: e.target.checked })}
                                            className="rounded"
                                        />
                                        <span>ÊòæÁ§∫Ë∞ÉËØï‰ø°ÊÅØ</span>
                                    </label>
                                </div>
                            </div>

                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Ë∞ÉËØïÂ∑•ÂÖ∑</h4>
                                <div className="grid grid-cols-1 gap-2">
                                    <button
                                        onClick={onOpenArmTest}
                                        className="px-3 py-2 text-xs bg-orange-500 text-white rounded hover:bg-orange-600 transition-colors"
                                    >
                                        ÊâãËáÇÊµãËØï
                                    </button>
                                    <button
                                        onClick={onOpenHandDebug}
                                        className="px-3 py-2 text-xs bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
                                    >
                                        ÊâãÈÉ®Ë∞ÉËØï
                                    </button>
                                    <button
                                        onClick={onOpenSmoothSettings}
                                        className="px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
                                    >
                                        Âπ≥ÊªëËÆæÁΩÆ
                                    </button>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* Âø´ÈÄüÊìç‰ΩúÊ†áÁ≠æÈ°µ */}
                    {activeTab === 'quick' && (
                        <div className="space-y-4">
                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Â∏∏Áî®Êìç‰Ωú</h4>
                                <div className="grid grid-cols-2 gap-2">
                                    <button
                                        onClick={onOpenModelManager}
                                        className="px-3 py-2 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
                                    >
                                        ÂàáÊç¢Ê®°Âûã
                                    </button>
                                    <button
                                        onClick={onOpenAnimationLibrary}
                                        className="px-3 py-2 text-xs bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors"
                                    >
                                        ÂàáÊç¢Âä®Áîª
                                    </button>
                                    <button
                                        onClick={() => onToggleBones(!showBones)}
                                        className="px-3 py-2 text-xs bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors"
                                    >
                                        {showBones ? 'ÈöêËóè' : 'ÊòæÁ§∫'}È™®È™º
                                    </button>
                                    <button
                                        onClick={() => onToggleArmAxes(!showArmAxes)}
                                        className="px-3 py-2 text-xs bg-orange-500 text-white rounded hover:bg-orange-600 transition-colors"
                                    >
                                        {showArmAxes ? 'ÈöêËóè' : 'ÊòæÁ§∫'}ÂùêÊ†áËΩ¥
                                    </button>
                                </div>
                            </div>

                            <div>
                                <h4 className="text-sm font-semibold mb-2 text-gray-700">Á≥ªÁªü‰ø°ÊÅØ</h4>
                                <div className="text-xs text-gray-600 space-y-1">
                                    <div>ÂΩìÂâçÊ®°Âûã: {selectedAnimation?.name || 'ÈªòËÆ§Ê®°Âûã'}</div>
                                    <div>ÂΩìÂâçÂä®Áîª: {selectedAnimation?.name || 'ÂæÖÊú∫Âä®Áîª'}</div>
                                    <div>È™®È™ºÊòæÁ§∫: {showBones ? 'ÂºÄÂêØ' : 'ÂÖ≥Èó≠'}</div>
                                    <div>ÂùêÊ†áËΩ¥: {showArmAxes ? 'ÂºÄÂêØ' : 'ÂÖ≥Èó≠'}</div>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            </div>
        </DraggablePanel>
    );
}; 